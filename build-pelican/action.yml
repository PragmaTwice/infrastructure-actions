name: Build a Pelican Website
description: "Generate a Pelican website from Markdown"    
inputs:
  token:
    description: 'Set to secrets.GITHUB_TOKEN in the workflow'
    required: true
  dest-branch:
    description: "Pelican Output branch"
    required: true
    default: "asf-site"
  uses-gfm:
    description: "Uses GitHub Flavored Markdown"
    required: false
    default: 'false'
runs:
  using: "composite"
  steps:
    - name: Install Pelican
      run: pip3 install pelican markdown ghp-import bs4 ezt
      shell: bash

    # If the site uses Github Flavored Markdown, use this build branch
    - name: fetch libcmark-gfm.so buildscript
      run: wget https://raw.githubusercontent.com/apache/infrastructure-pelican/master/bin/build-cmark.sh -O ./build-cmark.sh
      shell: bash
      if: ${{ github.event.inputs.uses-gfm == 'true' }}

    - name: build libcmark-gfm.so
      run: /bin/bash ./build-cmark.sh
      shell: bash
      if: ${{ github.event.inputs.uses-gfm == 'true' }}

    - name: Generate website from markdown
      run: /usr/bin/env python3 -m pelican content -o output
      shell: bash
      env:
        LIBCMARKDIR: "cmark-gfm-0.28.3.gfm.12/lib"
      if: ${{ github.event.inputs.uses-gfm == 'true' }}

    # Alternatively, use regular pelican
    - name: Generate website from markdown
      run: /usr/bin/env python3 -m pelican content -o output
      shell: bash
      if: ${{ github.event.inputs.uses-gfm == 'false' }}

    - name: Open a PR against the staging branch
      uses: peter-evans/create-pull-request@v6.0.5
      with:
        token: ${{ github.event.inputs.token }}
        commit-message: GitHub Actions Generated Pelican Build
        title: Generated Pelican Output
        body: output generated
        add-paths: |
          output/
        base: ${{ github.event.inputs.dest-branch }}
