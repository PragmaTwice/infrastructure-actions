name: Build a Pelican Website
description: "Generate a Pelican website from Markdown"    
inputs:
  token:
    description: 'Set to secrets.GITHUB_TOKEN in the workflow'
    required: true
  destination:
    description: "Pelican Output branch"
    required: true
    default: "asf-site"
  gfm:
    description: "Uses GitHub Flavored Markdown"
    required: false
    default: 'false'
runs:
  using: "composite"
  steps:
    - name: Install Pelican
      run: pip3 install pelican markdown ghp-import bs4 ezt
      shell: bash

    # If the site uses Github Flavored Markdown, use this build branch
    - name: fetch libcmark-gfm.so buildscript
      run: wget https://raw.githubusercontent.com/apache/infrastructure-pelican/master/bin/build-cmark.sh -O ./build-cmark.sh
      shell: bash
      if: ${{ inputs.gfm == 'true' }}

    - name: build libcmark-gfm.so
      run: /bin/bash ./build-cmark.sh
      shell: bash
      if: ${{ inputs.gfm == 'true' }}

    - name: Fetch plugin directory from pelicanconf.py
      id: plugin-paths
      run: echo "plugpaths=`/usr/bin/env python3 -m pelican --print-settings | grep PLUGIN_PATHS | awk -F': ' '{print $NF}'`" >> "$GITHUB_OUTPUT"
      shell: bash
      env: # in case we are using GFM (otherwise ignored)
        LIBCMARKDIR: "cmark-gfm-0.28.3.gfm.12/lib"

    - name: Fetch plugin list from pelicanconf.py
      id: plugins-used
      run: echo "plugins=`/usr/bin/env python3 -m pelican --print-settings | grep PLUGINS | awk -F': ' '{print $NF}'`" >> "$GITHUB_OUTPUT"
      shell: bash
      env: # in case we are using GFM (otherwise ignored)
        LIBCMARKDIR: "cmark-gfm-0.28.3.gfm.12/lib"

    - name: Fetch plugins for site generation
      shell: bash
      run: echo ${{ steps.plugins.outputs.PLUGINS }}
        #wget https://raw.githubusercontent.com/apache/infrastructure-pelican/main/pelican/plugins/${{ plugin }} -O ${{ steps.plugin-paths.outputs.PLUGIN_PATHS }}/${{  
    
    - name: Generate website from markdown
      run: /usr/bin/env python3 -m pelican content -o output -D
      shell: bash
      env: # in case we are using GFM (otherwise ignored)
        LIBCMARKDIR: "cmark-gfm-0.28.3.gfm.12/lib"

    - name: Open a PR against the staging branch
      uses: peter-evans/create-pull-request@v6.0.5
      with:
        token: ${{ inputs.token }}
        commit-message: GitHub Actions Generated Pelican Build
        title: Generated Pelican Output
        body: output generated
        add-paths: |
          output/
        base: ${{ inputs.destination }}
